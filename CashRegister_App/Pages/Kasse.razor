@page "/"
@using System.Linq;
@using CashRegister.Models
@using CashRegister.DAL
@using CashRegister_App.Data
@using CashRegister_DAL.DataAccessLayer
@using System.Net.Sockets
@using System.Net
@using System.Text

@inject IDialogService DialogService

@*Button zum auswählen ob man die Kategorien von der Sennerei oder von der Gastro sehen will*@
<div class="body">
    <MudTabs Elevation="2" Rounded="true" Centered="true" >
        <MudTabPanel OnClick="getSennerei" Icon="@Icons.Filled.IncompleteCircle" Text="Sennerei" />
        <MudTabPanel OnClick="getGastro" Icon="@Icons.Filled.FoodBank" Text="Gastro" />
    </MudTabs>
</div>

<table>
    <tr valign="top">
        <td>
            @*Grid wird erstellt indem alle Papers reingepackt werden*@
            <MudGrid Style="width: 1120px; margin-top: 20px">
                <MudItem xs="14" Style="margin-top: 20px;">
                    <MudGrid >
                        @*Für die Anzahl von dem int papers werden jetzt Papers erstellt (z.b papers = 4 Es werden dan 4 Paper erstellt)*@
                        @foreach (var kategorie in kategorien)
                        {
                            //Hier werden Die Papers errstellt mit einer bestimten Größe(xs)
                            <MudItem xs="14" Style="width: 243.8px; height: 96px; margin-top: 20px; margin-left: 20px;">
                                <MudPaper @onclick="() => kategorieClick(kategorie)" Style=" background-color:#c9caee; width: 243.8px; height: 96px;" Class="d-flex flex-column align-center justify-center mud-width-full py-8">
                                    <MudText Typo="Typo.h6">@kategorie.KategorieName</MudText>
                                </MudPaper>
                            </MudItem>
                        }
                    </MudGrid>
                </MudItem>
            </MudGrid>

            <MudDivider Style="margin-left: 20px; margin-top: 65px; width: 1035px; background-color: black;"></MudDivider>
            @if (isLoaded)
            {
                <MudGrid Style="width: 1120px;">
                    <MudItem xs="14" Style="margin-top: 20px;">
                        <MudGrid>

                            @*Für die Anzahl von dem int papers werden jetzt Papers erstellt (z.b papers = 4 Es werden dan 4 Paper erstellt)*@
                            @foreach (var produkt in produkte)
                            {
                                //Hier werden Die Papers errstellt mit einer bestimten Größe(xs)
                                <MudItem xs="14" Style="width: 243.8px; height: 96px; margin-top: 20px; margin-left: 20px;">
                                    <MudButton @onclick="() => produktClick(produkt)" Style=" background-color: #c9caee; width: 243.8px; height: 96px;" Class="d-flex flex-column align-center justify-center mud-width-full py-8">
                                        <MudText Typo="Typo.h6">@produkt.Name</MudText>
                                    </MudButton>
                                </MudItem>
                            }
                        </MudGrid>
                    </MudItem>
                </MudGrid>
            }
        </td>

        <td>
            <MudDataGrid T="EinkaufsPosition" Style=" width: 500px; height: 700px; margin-top: 10px;" Items="@einkaufsPosition" Virtualize="true">
                    <Columns>
                    <Column T="EinkaufsPosition" Title="Menge" Field="Anzahl" />
                    <Column T="EinkaufsPosition" Title="Bezeichung" Field="ProduktName" />
                    <Column T="EinkaufsPosition" Title="CHF" Field="ZwischenPreis" />
                </Columns>
                </MudDataGrid>

            <MudTextField @bind-Value="@Gesamtpreis" ReadOnly="true" Label="Gesamtpreis" Variant="Variant.Outlined"></MudTextField>

                <MudFab Label="Kassa Öffnen" OnClick="createBeleg" Style="background-color: #c9caee; width: 250px; margin-top: 20px; margin-left: 85px" />

            

        </td>
    </tr>
</table>

@code {

    static CashRegisterContextDB context = new CashRegisterContextDB();
    EinkaufsPosition EP = new EinkaufsPosition();
    EinkaufsPositionDAL einkaufsPositionDAL = new EinkaufsPositionDAL(context);
    BelegDAL belegDAL = new BelegDAL(context);
    List<EinkaufsPosition> einkaufsPosition = new List<EinkaufsPosition>();
    PrintService printService = new PrintService(context);


    static List<Kategorie> kategorien = context.Kategorie.Where(x => x.MandantId == 2).ToList();
    static List<Produkt> produkte = context.Produkt.ToList();

    //   Einka EinkaufusPositionusMaximusConradusDeytonus;

    decimal Gesamtpreis = 0;
    string gegebenesGeld;
    double Gesamtpreis = 0;
    int Anzahl = 0;
    bool isLoaded = false;

    void createBeleg()
    {

        OpenDialog();
        belegDAL.Create(einkaufsPosition);
        printService.PrintBeleg(einkaufsPosition);
        context.SaveChanges();
        einkaufsPosition.Clear();
        Gesamtpreis = 0;
    }
    public class DirectPrintingScript
    {
        public string Value { get; set; }
        public int PrintMethodID { get; set; }
        public bool IsNeedPrint { get; set; }
    }

    void UpdateBreaks(int index, int changeamount)
    {
        int newbreaks = 2; 
        newbreaks += changeamount;

        StateHasChanged();
    }

    public void kategorieClick(Kategorie kategorie)
    {
        isLoaded = true;
        produkte = context.Produkt.Where(x => x.Kategorie == kategorie).ToList();
    }
    public void produktClick(Produkt produkt)
    {
        if (einkaufsPosition.Exists(x => x.Produkt.Id == produkt.Id))
        {
            einkaufsPosition.Find(x => x.Produkt.Id == produkt.Id).Anzahl++;
        }
        else
        {
            einkaufsPositionDAL.Create(Anzahl = 1, produkt, einkaufsPosition);

        }
        Gesamtpreis = belegDAL.GetGesamtPreis(einkaufsPosition);
    }

    public void getGastro()
    {
        isLoaded = false;
        kategorien = context.Kategorie.Where(x => x.MandantId == 1).ToList();
    }

    public void getSennerei()
    {
        isLoaded = false;
        kategorien = context.Kategorie.Where(x => x.MandantId == 2).ToList();
    }

    async Task OpenDialog()
    {
        var parameters = new DialogParameters { ["Gesamtpreis"] = belegDAL.GetGesamtPreis(einkaufsPosition), ["Gegeben"] = belegDAL.GetGesamtPreis(einkaufsPosition) };

        var dialog = DialogService.Show<DialogGegeben>("Geld Erhalten", parameters);

        var result = await dialog.Result;

        gegebenesGeld = result.Data.ToString();
    }
}