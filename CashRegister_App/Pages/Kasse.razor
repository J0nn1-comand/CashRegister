@page "/"
@using System.Linq;
@using CashRegister.Models
@using CashRegister.DAL
@using CashRegister_DAL.DataAccessLayer

@inject IDialogService DialogService

@*Button zum auswählen ob man die Kategorien von der Sennerei oder von der Gastro sehen will*@
<div class="body">
    <MudTabs Elevation="2" Rounded="true" Centered="true">
        <MudTabPanel OnClick="getSennerei" Icon="@Icons.Filled.IncompleteCircle" Text="Sennerei" />
        <MudTabPanel OnClick="getGastro" Icon="@Icons.Filled.FoodBank" Text="Gastro" />
    </MudTabs>
</div>

<table>
    <tr valign="top">
        <td>
            @*Grid wird erstellt indem alle Papers reingepackt werden*@
            <MudGrid Style="width: 1120px; margin-top: 20px">
                <MudItem xs="14" Style="margin-top: 20px;">
                    <MudGrid>
                        @*Für die Anzahl von dem int papers werden jetzt Papers erstellt (z.b papers = 4 Es werden dan 4 Paper erstellt)*@
                        @foreach (var kategorie in getKategorien)
                        {
                            //Hier werden Die Papers errstellt mit einer bestimten Größe(xs)
                            <MudItem xs="14" Style="width: 243.8px; height: 96px; margin-top: 20px; margin-left: 20px;">
                                <MudPaper @onclick="() => kategorieClick(kategorie)" Style=" background-color:#c9caee; width: 243.8px; height: 96px;" Class="d-flex flex-column align-center justify-center mud-width-full py-8">
                                    <MudText Typo="Typo.h6">@kategorie</MudText>
                                </MudPaper>
                            </MudItem>
                        }
                    </MudGrid>
                </MudItem>
            </MudGrid>

            <MudDivider Style="margin-left: 20px; margin-top: 65px; width: 1035px; background-color: black;"></MudDivider>
            @if (isLoaded)
            {
                <MudGrid Style="width: 1120px;">
                    <MudItem xs="14" Style="margin-top: 20px;">
                        <MudGrid>
                            @*Für die Anzahl von dem int papers werden jetzt Papers erstellt (z.b papers = 4 Es werden dan 4 Paper erstellt)*@
                            @foreach (var produkt in produkte)
                            {
                                //Hier werden Die Papers errstellt mit einer bestimten Größe(xs)
                                <MudItem xs="14" Style="width: 243.8px; height: 96px; margin-top: 20px; margin-left: 20px;">
                                    <MudButton @onclick="() => produktClick(produkt)" Style=" background-color: #c9caee; width: 243.8px; height: 96px;" Class="d-flex flex-column align-center justify-center mud-width-full py-8">
                                        <MudText Typo="Typo.h6">@produkt.Name</MudText>
                                    </MudButton>
                                </MudItem>
                            }
                        </MudGrid>
                    </MudItem>
                </MudGrid>
            }
        </td>
        <td>
            <MudDataGrid T="EinkaufsPosition" Style=" width: 500px; height: 700px; margin-top: 10px;" Items="@einkaufsPositionen" Virtualize="true">
                <Columns>
                    <Column T="EinkaufsPosition" Title="Menge/Gramm" Field="Anzahl" />
                    <Column T="EinkaufsPosition" Title="Bezeichung" Field="ProduktName" />
                    <Column T="EinkaufsPosition" Title="CHF" Field="ZwischenPreisRound" />
                </Columns>
            </MudDataGrid>

            <MudTextField @bind-Value="@Gesamtpreis" ReadOnly="true" Label="Gesamtpreis" Variant="Variant.Outlined"></MudTextField>

            <MudFab Label="Kassa Öffnen" OnClick="createBeleg" Style="background-color: #c9caee; width: 250px; margin-top: 20px; margin-left: 85px" />
        </td>
    </tr>
</table>

@code {
    static CashRegisterContextDB context = new CashRegisterContextDB();
    EinkaufsPosition EP = new EinkaufsPosition();
    EinkaufsPositionDAL einkaufsPositionDAL = new EinkaufsPositionDAL(context);
    BelegDAL belegDAL = new BelegDAL(context);
    public List<EinkaufsPosition> einkaufsPositionen = new List<EinkaufsPosition>();

    static List<Kategorie> kategorien = context.Kategorie.ToList();
    static List<Produkt> produkte = context.Produkt.ToList();
    string produktus;
    MudMessageBox Belegbox { get; set; }

    double Gesamtpreis = 0;
    int Anzahl = 0;
    bool isLoaded = false;

    public List<String> getKategorien
    {
        get
        {
            return kategorien.Select(x => x.KategorieName).ToList();
        }
        set { }
    }

    void createBeleg()
    {
        belegDAL.Create(einkaufsPositionen);
        context.SaveChanges();
        einkaufsPositionen.Clear();
    }

    void UpdateBreaks(int index, int changeamount)
    {
        int newbreaks = 2;
        newbreaks += changeamount;

        StateHasChanged();
    }

    public void kategorieClick(string kategorie)
    {
        isLoaded = true;
        produkte = context.Produkt.Where(x => x.Kategorie.KategorieName == kategorie).ToList();
    }
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    public double mengenPreis = 0;
    public int GrammAnzahl = 0;

    public void produktClick(Produkt produkt)
    {

        // EInkaufsposition suchen oder neu erstellen
        EinkaufsPosition einkaufsPosition = einkaufsPositionen.Find(x => x.Produkt.Id == produkt.Id);
        if (einkaufsPosition == null)
        {
            einkaufsPositionDAL.Create(Anzahl = 0, produkt, einkaufsPositionen);
            einkaufsPosition = einkaufsPositionen.Find(x => x.Produkt.Id == produkt.Id);
        }

        if (produkt.Preisart)
        {
            var parameters = new DialogParameters { ["einkaufsPosition"] = einkaufsPosition };

            DialogOptions closeOnEscapeKey = new DialogOptions() { CloseOnEscapeKey = true };

            DialogService.Show<MengeDialog>("Gramm/Produkt", parameters, closeOnEscapeKey);
        }
        else
        {
            einkaufsPosition.Anzahl++;
        }

        Gesamtpreis = belegDAL.GetGesamtPreis(einkaufsPositionen);
        //double GesamtPreisRound = Gesamtpreis;
        //Math.Round(GesamtPreisRound, 2);
    }

    public void getGastro()
    {
        isLoaded = false;
        kategorien = context.Kategorie.Where(x => x.MandantId == 1).ToList();
    }

    public void getSennerei()
    {
        isLoaded = false;
        kategorien = context.Kategorie.Where(x => x.MandantId == 2).ToList();
    }
}